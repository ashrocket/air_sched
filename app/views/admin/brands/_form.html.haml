.row
  = simple_form_for [:admin,@brand], html: { class: 'form-horizontal' },
      wrapper: :horizontal_form,
      wrapper_mappings: { check_boxes: :horizontal_radio_and_checkboxes,
                         radio_buttons: :horizontal_radio_and_checkboxes,
                         file: :horizontal_file_input,
                         boolean: :horizontal_boolean }  do |f|

    - if @brand.errors.any?
      .alert.alert-danger.alert-dismissable{role: 'alert'}
        %button.close{type: 'button', data: {dismiss: 'alert'} }
          %span{aria: {hidden: 'true'} } &times;
          %span.sr-only Close
        %h4= "#{pluralize(@brand.errors.count, 'error')} prohibited this Brand from being saved:"

        %ul
          - @brand.errors.full_messages.each do |msg|
            %li= msg




    .form-inputs
      = f.input :brand_key
      = f.input :name
      = f.association :report_keys, as: :check_boxes, include_hidden: false
      -#TODO:  Change the association checkboxes to use Jquey List Boxes
      -#with Add Left or Remove Right
      = f.input :description
      = f.input :default_currency
      -#TODO:  Change the association checkboxes to use filter Only for Hosts with not associated with
      -# would be best to enable nested attribute creation

      = f.association :hosts, as: :check_boxes, label_method: lambda {|host| "#{host.name} (Brand:#{host.brand.brand_key})"}
      = f.input :active

    %br
    .form-actions.col-sm-offset-1
      = f.button :submit
.row
  %br